plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'npng'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies{
	// spring boot
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// mysql
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// grpc
	implementation 'io.grpc:grpc-netty-shaded'
	implementation 'io.grpc:grpc-stub'
	implementation 'io.grpc:grpc-protobuf'
	implementation 'com.google.protobuf:protobuf-java:3.25.3'
}

protobuf {
	protoc { artifact = "com.google.protobuf:protoc:3.25.3" }   // ★
	plugins {
		grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.64.0" }
	}
	generateProtoTasks {
		all().configureEach { task ->
			task.plugins { grpc {} }  // gRPC 스텁
			task.builtins { java {} } // 메시지 클래스
		}
	}
}

sourceSets {
	main {
		proto { srcDir 'src/main/proto' }
		java {
			srcDirs += [
					"$buildDir/generated/source/proto/main/java",
					"$buildDir/generated/source/proto/main/grpc"
			]
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
